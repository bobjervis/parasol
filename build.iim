command(name: bdiff, main: src/util/bdiff.p)
command(name: dumppxi, main: src/util/dumppxi.p)
command(name: genHeader, main: src/util/genHeader.p)
command(name: genSqlProxy, main: src/util/genSqlProxy.p)
command(name: hex, main: src/util/hex.p)
command(name: paradoc, main: src/util/paradoc.p)
command(name: pcurl, main: src/util/pcurl.p)
command(name: ucdParser, main: src/util/ucdParser.p)
command(name: phost, main: src/util/phost.p)
command(name: etsTests, main: test/drivers/etsTests.p)

target(os: linux, cpu: x86-64) {
	package(name: parasol, domain: parasol) {
		folder(name: bin) {
			file(name: dumppxi, src: bin)
			file(name: genhdr, src: bin)
			link(name: libparasol.so, target: libparasol.so.1)
			elf(name: libparasol.so.1, target: build/libparasol.so.1, makefile: src/runtime/makefile) {
				file(name: *.h, src: src/runtime)
				file(name: executionContext.cc, src: src/runtime)
				file(name: pxi.cc, src: src/runtime)
			}
			elf(name: parasolrt, target: build/parasolrt, makefile: src/runtime/makefile) {
				file(name: main.cc, src: src/runtime)
				file(name: *.h, src: src/runtime)
			}
			file(name: paradoc, src: bin)
			file(name: pc, src: bin)
			file(name: runets, src: bin)
			file(name: unit, src: bin)
			pxi(name: x86-64-lnx.pxi, main: compiler/main.p, target: x86-64-lnx) {
				file(name: *.p, src: src/lib)
			}
		}
		folder(name: compiler) {
			file(name: main.p, src: compiler)
		}
		folder(name: lib) {
			file(name: root.p, src: lib)
		}
		folder(name: src) {
			folder(name: lib) {
				file(name: *, src: src/lib)
			}
			folder(name: util) {
				file(name: *, src: src/util)
			}
		}
	}

	tests(suite: update_git) {
		include(suite: full)
	
		on_pass() {
			set +v
			if ! diff -q build/parasol/parasol/bin/x86-64-lnx.pxi bin/x86-64-lnx.pxi
			then
				echo replacing bin/x86-64-lnx.pxi
			    cp build/parasol/parasol/bin/x86-64-lnx.pxi bin/x86-64-lnx.pxi
			else
				echo skipping x86-64-lnx.pxi
			fi
			if ! diff -q build/parasolrt bin/parasolrt
			then
				echo replacing bin/parasolrt
			    cp build/parasolrt bin/parasolrt
			else
				echo skipping parasolrt
			fi
			if ! diff -q build/libparasol.so.1 bin/libparasol.so.1
			then
				echo replacing bin/libparasol.so.1
			    cp build/libparasol.so.1 bin/libparasol.so.1
				ln -sfT libparasol.so.1 bin/libparasol.so
			else
				echo skipping libparasol.so.1
			fi
		}
	}

	tests(suite: freshen) {
		on_pass() {
			set +v
			if ! diff -q build/parasol/parasol/bin/x86-64-lnx.pxi bin/x86-64-lnx.pxi
			then
				echo replacing bin/x86-64-lnx.pxi
			    cp build/parasol/parasol/bin/x86-64-lnx.pxi bin/x86-64-lnx.pxi
			else
				echo skipping x86-64-lnx.pxi
			fi
			if ! diff -q build/parasolrt bin/parasolrt
			then
				echo replacing bin/parasolrt
			    cp build/parasolrt bin/parasolrt
			else
				echo skipping parasolrt
			fi
			if ! diff -q build/libparasol.so.1 bin/libparasol.so.1
			then
				echo replacing bin/libparasol.so.1
			    cp build/libparasol.so.1 bin/libparasol.so.1
				ln -sfT libparasol.so.1 bin/libparasol.so
			else
				echo skipping libparasol.so.1
			fi
		}
	}
}

target(os: windows, cpu: x86-64) {
	package(name: parasol, domain: parasol) {
		folder(name: bin) {
			file(name: genhdr.bat, src: bin)
			exe(name: parasol.exe) {
				...
			}
			file(name: pc.bat, src: bin)
			file(name: runets.bat, src: bin)
			file(name: unit.bat, src: bin)
			pxi(name: x86-64-win.pxi, main: compiler/main.p. target: x86-64-win) {
				file(name: *.p, src: src/lib)
			}
		}
		folder(name: compiler) {
			file(name: main.p, src: compiler)
		}
		folder(name: lib) {
			file(name: root.p, src: lib)
		}
		folder(name: src) {
			folder(name: lib) {
				file(name: *, src: src/lib)
			}
			folder(name: util) {
				file(name: *, src: src/util)
			}
		}
	}

	tests(suite: update_git) {
		include(suite: full)
	
		on_pass() {
			fc /b build\\x86-64-win.pxi bin\\x86-64-win.pxi
			if not errorlevel 0 copy build\\x86-64-win.pxi bin\\x86-64-win.pxi
			fc /b build\\parasol.exe bin\\parasol.exe
			if not errorlevel 0 copy build\\parasol.exe bin\\parasol.exe
			fc /b build\\parasol.dll bin\\parasol.dll
			if not errorlevel 0 copy build\\parasol.dll bin\\libparasol.dll
		}
	}

	tests(suite: freshen) {
		on_pass() {
			fc /b build\\x86-64-win.pxi bin\\x86-64-win.pxi
			if not errorlevel 0 copy build\\x86-64-win.pxi bin\\x86-64-win.pxi
			fc /b build\\parasol.exe bin\\parasol.exe
			if not errorlevel 0 copy build\\parasol.exe bin\\parasol.exe
			fc /b build\\parasol.dll bin\\parasol.dll
			if not errorlevel 0 copy build\\parasol.dll bin\\libparasol.dll
		}
	}}

tests(suite: new_tests) {
	ets(name: test/scripts/new_tests.ets)
}

tests(suite: unit) {
}

tests(suite: full) {
	include(suite: unit)

	ets(name: test/scripts/parasol_tests.ets)
}

