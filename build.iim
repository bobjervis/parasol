command(name: bdiff, main: src/util/bdiff.p)
command(name: dumppxi, main: src/util/dumppxi.p)
command(name: genHeader, main: src/util/genHeader.p)
command(name: genSqlProxy, main: src/util/genSqlProxy.p)
command(name: hex, main: src/util/hex.p)
command(name: paradoc, main: src/util/paradoc.p)
command(name: pcurl, main: src/util/pcurl.p)
command(name: ucdParser, main: src/util/ucdParser.p)
command(name: phost, main: src/util/phost.p)
command(name: etsTests, main: test/drivers/etsTests.p)

target(os: linux, cpu: x86-64) {
	package(name: parasol, domain: parasol) {
		folder(name: bin) {
			file(name: dumppxi, src: bin)
			file(name: genhdr, src: bin)
			link(name: libparasol.so, target: libparasol.so.1)
			elf(name: libparasol.so.1, src: build/libparasol.so.1) {
				make(target: build/libparasol.so.1, makefile: runtime/makefile)
			}
			file(name: paradoc, src: bin)
			elf(name: parasolrt, src: build/parasolrt) {
				make(target: build/parasolrt, makefile: runtime/makefile)
			}
			file(name: pc, src: bin)
			file(name: refresh, src: bin)
			file(name: rebuild, src: bin)
			file(name: runets, src: bin)
			file(name: unit, src: bin)
			pxi(name: x86-64-lnx.pxi, main: compiler/main.p, target: x86-64-lnx)
		}
		folder(name: compiler) {
			file(name: main.p, src: compiler)
		}
		folder(name: lib) {
			file(name: root.p, src: lib)
		}
		folder(name: src) {
			folder(name: lib) {
				file(name: *, src: src/lib)
			}
			folder(name: util) {
				file(name: *, src: src/util)
			}
		}
	}
}

target(os: windows, cpu: x86-64) {
	package(name: parasol, domain: parasol) {
		folder(name: bin) {
			file(name: genhdr.bat, src: bin)
			exe(name: parasol.exe) {
				...
			}
			file(name: pc.bat, src: bin)
			file(name: rebuild.bat, src: bin)
			file(name: runets.bat, src: bin)
			file(name: unit.bat, src: bin)
			pxi(name: x86-64-win.pxi, main: compiler/main.p. target: x86-64-win)
		}
		folder(name: compiler) {
			file(name: main.p, src: compiler)
		}
		folder(name: lib) {
			file(name: root.p, src: lib)
		}
		folder(name: src) {
			folder(name: lib) {
				file(name: *, src: src/lib)
			}
			folder(name: util) {
				file(name: *, src: src/util)
			}
		}
	}
}

tests(suite: unit) {
}

tests(suite: full) {
	include (suite: unit)
}


